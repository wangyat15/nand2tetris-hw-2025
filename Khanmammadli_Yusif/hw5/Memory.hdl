// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/5/Memory.hdl
/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid and reads 0. Access to any address
 * in the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the Screen
 * and Keyboard chip specifications given in the lectures and the book.
 */
CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
	//// Replace this comment with your code.
    Not(in= address[14], out= isRAM);
    Not(in= address[13], out= notadd13);
    And(a= address[14], b= notadd13, out= isScreen);
    And(a = address[14], b = address[13], out= isKB);

    And(a= isRAM, b= load, out= RAMload);
    And(a= isScreen, b= load, out= Screenload);

    Keyboard(out= KBin);

    RAM16K(in= in, load= RAMload, address= address[0..13], out= RAMout);
    Screen(in= in, load= Screenload, address= address[0..12], out= Screenout);
    
    Mux16(b= RAMout, a= Screenout, sel= isRAM, out= RAMScreenout);
    Mux16(b= KBin, a= RAMScreenout, sel= isKB, out= out);
}